nc: 4  # 单类别车牌检测
scales:
  n: [0.50, 0.25, 1024]

backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv,  [64, 3, 2]]            # 0-P1/2
  - [-1, 1, Conv,  [128, 3, 2]]            # 1-P2/4
  - [ -1, 2, C3k2_CoordAtt, [ 256, 256, 0.25 ] ]
  # 使用集成 CoordAtt 的 C3k2 模块
  - [-1, 1, Conv,  [256, 3, 2]]            # 3-P3/8
  - [-1, 2, C3k2_CoordAtt,  [512, False, 0.25]]     # 普通 C3k2 模块
  - [-1, 1, Conv,  [512, 3, 2]]            # 5-P4/16
  - [-1, 4, A2C2f, [512, True, 4]]
  - [-1, 1, Conv,  [1024, 3, 2]]           # 7-P5/32
  - [-1, 4, A2C2f, [1024, True, 1]]        # 8

head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]  # 将最后一层上采样因子改为 4
  - [[-1, 6], 1, Concat, [1]]                    # 拼接两路特征
  - [-1, 2, A2C2f_FMA, [512, False, 1]]           # 后续处理

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]]
  - [-1, 2, A2C2f_FMA, [256, False, 1]]

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 11], 1, Concat, [1]]
  - [-1, 2, A2C2f_FMA, [512, False, 1]]

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 8], 1, Concat, [1]]
  - [-1, 2, C3k2, [1024, True]]

  - [[14, 17, 20], 1, Detect, [nc]]